{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/priyash7/Desktop/projects/Portfolio-Webpage/src/components/Navbar.tsx"],"sourcesContent":["import Link from \"next/link\";\n\nexport const Navbar = () => {\n    return (\n      <div className=\"flex justify-end items-center space-x-4 mb-8\">\n        <Link href=\"/\">about</Link>\n        {/* <h1>about</h1> */}\n        <span className=\"text-gray-500\">/</span>\n        <h1>projects</h1>\n        <span className=\"text-gray-500\">/</span>\n        <Link href=\"/blogs\">blogs</Link>\n        {/* <h1>blog</h1> */}\n      </div>\n    );\n  };\n  "],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,SAAS;IAClB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BAAI;;;;;;0BAEf,8OAAC;gBAAK,WAAU;0BAAgB;;;;;;0BAChC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAK,WAAU;0BAAgB;;;;;;0BAChC,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BAAS;;;;;;;;;;;;AAI1B"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/priyash7/Desktop/projects/Portfolio-Webpage/src/lib/notion.ts"],"sourcesContent":["import { Client } from '@notionhq/client';\n\nconst notion = new Client({ auth: process.env.NOTION_TOKEN});\n\nexport const getDatabase = async () => {\n  const response = await notion.databases.query({\n    database_id: process.env.NOTION_DATABASE_ID!,\n  });\n  return response.results;\n};\n\nexport const getPage = async (pageId : any) => {\n  const response = await notion.pages.retrieve({ page_id: pageId });\n\n  return response;\n};\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,SAAS,IAAI,6JAAA,CAAA,SAAM,CAAC;IAAE,MAAM,QAAQ,GAAG,CAAC,YAAY;AAAA;AAEnD,MAAM,cAAc;IACzB,MAAM,WAAW,MAAM,OAAO,SAAS,CAAC,KAAK,CAAC;QAC5C,aAAa,QAAQ,GAAG,CAAC,kBAAkB;IAC7C;IACA,OAAO,SAAS,OAAO;AACzB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,WAAW,MAAM,OAAO,KAAK,CAAC,QAAQ,CAAC;QAAE,SAAS;IAAO;IAE/D,OAAO;AACT"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///home/priyash7/Desktop/projects/Portfolio-Webpage/src/app/blogs/page.tsx"],"sourcesContent":["import { Navbar } from \"@/components/Navbar\";\nimport { getDatabase } from \"@/lib/notion\";\n\n\nexport const revalidate = 1000; // Revalidate every 10 seconds for ISR\n\n\nexport default async function BlogsPage() {\n    // Fetch blogs from Notion\n    const posts = await getDatabase();\n\n    return (\n        <div className=\"flex flex-col items-center p-8 rounded-lg max-w-2xl mx-auto mt-20\">\n            <Navbar />\n            <h1 className=\"text-3xl font-bold text-gray-100 mt-4 mb-8\">Blogs</h1>\n            {posts.length > 0 ? (\n                <ul className=\"space-y-4\">\n                    {posts.map((post) => (\n                        <li\n                            key={post.id}\n                            className=\"p-4 bg-gray-800 rounded-lg shadow-lg w-full\"\n                        >\n                            \n                            <h2  className=\"text-xl font-bold text-gray-100\">\n                                \n\n                                {\n                                //@ts-ignore\n                                post.properties.Title.title[0].text.content\n                                }\n                                \n                               \n                            </h2>\n                            {/* <p className=\"text-gray-400\">\n                                {\n                                //@ts-ignore\n                                post.properties.Content.rich_text[0]?.text?.content || \"No content\"\n                                }\n                            </p> */}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p className=\"text-gray-400\">No blogs found. Stay tuned!</p>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAGO,MAAM,aAAa,MAAM,sCAAsC;AAGvD,eAAe;IAC1B,0BAA0B;IAC1B,MAAM,QAAQ,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD;IAE9B,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,4HAAA,CAAA,SAAM;;;;;0BACP,8OAAC;gBAAG,WAAU;0BAA6C;;;;;;YAC1D,MAAM,MAAM,GAAG,kBACZ,8OAAC;gBAAG,WAAU;0BACT,MAAM,GAAG,CAAC,CAAC,qBACR,8OAAC;wBAEG,WAAU;kCAGV,cAAA,8OAAC;4BAAI,WAAU;sCAKX,AADA,YAAY;4BACZ,KAAK,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO;;;;;;uBAT1C,KAAK,EAAE;;;;;;;;;qCAwBxB,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;;AAI7C"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}